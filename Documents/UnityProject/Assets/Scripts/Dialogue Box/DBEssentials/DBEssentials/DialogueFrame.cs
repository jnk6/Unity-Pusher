//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace DBEssentials
{
	/// <summary>
	/// Holds the necessary information for a single instance of the dialogue box.
	/// </summary>
	public class DialogueFrame {
		public enum dftype {normal, choice};	/*normal = text only, choice = buttons only, text will 
										be used in log, before your choice is displayed */
		dftype type;
		Sprite portrait;
		string speaker_name, dialogue_text;
		string[] button_labels;

		/// <summary>
		/// Initializes a new instance of the text version of the <see cref="DBEssentials.DialogueFrame"/> class.
		/// Using this constructor will automatically configure the dialogue 
		/// </summary>
		/// <param name="port">Portrait of the character speaking in this dialogue frame.</param>
		/// <param name="speakerName">The name of the character speaking, or object being interacted.</param>
		/// <param name="text">Text content of this dialogue frame.</param>
		public DialogueFrame( Sprite port, string speakerName, string text){
			Portrait = port;
			CharName = speakerName;
			DialogueText = text;
			type = Normal;
		}

		/// <summary>
		/// Initializes a new instance of the <see cref="DBEssentials.DialogueFrame"/> class.
		/// </summary>
		/// <param name="port">Portrait of the character speaking in this dialogue frame.</param>
		/// <param name="title">Title of the choice dialogue frame. Could be a question, a statement or whatever.</param>
		/// <param name="logtext">Text to be displayed in the log. Buttons for choices will be displayed in the dialogue box instead of text</param>
		/// <param name="blabels">Blabels.</param>
		public DialogueFrame( Sprite port, string title, string logtext, string[] blabels){

			Portrait = port;
			CharName = title;
			DialogueText = logtext;
			type = Choice;
			button_labels = blabels;
		}

		/// <summary>
		/// Gets or sets the portrait.
		/// </summary>
		/// <value>A Sprite portrait.</value>
		public Sprite Portrait {
			get{
				return portrait;
			}
			set {
				portrait = value;
			}
			
		}

		/// <summary>
		/// Gets or sets the name of the character speaking in this .
		/// </summary>
		/// <value>String name.</value>
		public string CharName {
			get {
				return speaker_name;
			}
			set {
				speaker_name = value;
			}
		}

		/// <summary>
		/// Gets or sets the dialogue text.
		/// </summary>
		/// <value>The dialogue text.</value>
		public string DialogueText {
			get {
				return dialogue_text;
			}
			set {
				dialogue_text = value;
			}
		}

		/// <summary>
		/// Gets or sets the button labels.
		/// </summary>
		/// <value>The button labels.</value>
		public string[] ButtonLabels{
			get{
				return button_labels;
			}
			set{
				button_labels = value;
			}
		}

		/// <summary>
		/// Gets or sets the Dialogue Frame type. Normal means the DFrame will only display text
		/// for dialogue. Choice means the DFrame will display the buttons only in the dialogue box but
		/// will write the text to the conversation log.
		/// </summary>
		/// <value>dftype type.</value>
		public dftype Type {
			get{return type;}
			set{type = value;}
		}

		/// <summary>
		/// Gets the Dialogue Frame type choice.
		/// </summary>
		/// <value>dftype choice.</value>
		public dftype Choice{
			get {return dftype.choice;}
		}

		/// <summary>
		/// Gets the Dialogue Frame type normal.
		/// </summary>
		/// <value>dftype normal.</value>
		public dftype Normal{
			get {return dftype.normal;}
		}
	}
}

